@model gui.ViewModels.OcenaFirmyVM
@using gui.ViewModels;
@{
    ViewBag.Title = "OcenFirme";
}

<h2>OcenFirme</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    string[] names = Model.GetType().GetProperties().
        Where(n => (n.GetCustomAttributes(typeof(OcenaCzastkowa), false)).Count() == 1).
        Select(n => (n.GetCustomAttributes(typeof(OcenaCzastkowa), false)).Cast<OcenaCzastkowa>().Single().DisplayName).ToArray();
    string[] values = Model.GetType().GetProperties().
        Where(n => (n.GetCustomAttributes(typeof(OcenaCzastkowa), false)).Count() == 1).
        Select(n => n.Name).ToArray();
        <table>
            @for (int y = 0; y < values.Count(); y++)
            {
                <tr>
                    <th>
                        @Html.Label(names[y])
                    </th>
                    <td>
                        <div id='@Html.Raw("toggle" + y + "0")' class="toggle-on" data-hight="true" onclick="metoogle(@y, 0, '@Html.Raw(values[y])')"></div>
                        @for (int x = 1; x < 10; x++)
                        {
                            <div id='@Html.Raw("toggle" + y + "" + x)' class="toggle" data-hight="false" onclick="metoogle(@y, @x, '@Html.Raw(values[y])')"></div>
                        }
                        <div />
                    </td>
                </tr>
            }
        </table>

    @Html.HiddenFor(item => item.id_firmy);

    for (int y = 0; y < values.Count(); y++)
    {
        <input data-val="true" id='@Html.Raw(values[y])' name='@Html.Raw(values[y])' type="hidden" value="0" />
    }

    <input type="submit" value="ocen" />

}

@section scripts {
    <script src="~/Scripts/jquery-ui-1.10.4.js"></script>
    <script>
        $("div[id^='toggle']").mouseover(function (event) {
            $(event.target).css({ 'background': '#2d5e2b' });
        });
        $("div[id^='toggle']").mouseout(function (event) {
            if ($(event.target).attr('data-hight') == 'true') {
                //alert('true');
                $(event.target).css({ 'background': '#1ddb15' });
            }
            else {
                //alert('false');
                $(event.target).css({ 'background': 'gray' });
            }
        });

        function metoogle(y, x, prop) {
            $("#" + prop).val(x);
            for (var i = 0; i <= x; i++) {
                var element = $("#toggle" + y + "" + i);
                element.css({ 'background': '#1ddb15' });
                element.attr('data-hight', true);
            }

            for (var i = x + 1; i < 10; i++) {
                var element = $("#toggle" + y + "" + i);
                element.css({ 'background': 'gray' });
                element.attr('data-hight', false);
            }
        }
    </script>
}